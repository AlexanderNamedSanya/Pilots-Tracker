import { useEffect, useState } from 'react'

export default function Home() {
  const [roles, setRoles] = useState([])
  const [selectedRole, setSelectedRole] = useState('')
  const [ships, setShips] = useState([])
  const [selectedShips, setSelectedShips] = useState([])
  const [pilotName, setPilotName] = useState('')

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–æ–ª–µ–π –∏–∑ Google Sheets —á–µ—Ä–µ–∑ API
  useEffect(() => {
  fetch(`${process.env.NEXT_PUBLIC_GSHEET_API}?sheet=Roles`)
    .then(res => res.json())
    .then(data => {
      // data = [{"Role":"DPS"}, {"Role":"–õ–æ–≥–∏—Å—Ç"}, ...]
      const rolesArray = data.map(r => r.Role)  // <-- –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –±–µ—Ä—ë–º —Å–≤–æ–π—Å—Ç–≤–æ Role
      setRoles(rolesArray)
    })
    .catch(err => console.error('Error loading roles:', err))
}, [])

  // –ü–æ–¥–≥—Ä—É–∑–∫–∞ –∫–æ—Ä–∞–±–ª–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ä–æ–ª–∏
  useEffect(() => {
    if (!selectedRole) return
    fetch(`${process.env.NEXT_PUBLIC_GSHEET_API}?sheet=Ships&role=${selectedRole}`)
      .then(res => res.json())
      .then(data => setShips(data))
      .catch(err => console.error('Error loading ships:', err))
  }, [selectedRole])

  const handleSubmit = async (e) => {
    e.preventDefault()
    if (!pilotName || !selectedRole) return alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–º—è –∏ —Ä–æ–ª—å!')
    const payload = { pilotName, role: selectedRole, ships: selectedShips }
    try {
      await fetch(`${process.env.NEXT_PUBLIC_GSHEET_API}?sheet=Pilots`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload)
      })
      alert('–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!')
    } catch (err) {
      console.error(err)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏')
    }
  }

  return (
    <div className="container">
      <div className="header">
        <div className="logo">ü¶Ä</div>
        <h1>4Crabs Pilot Tracker</h1>
      </div>

      <form onSubmit={handleSubmit}>
        <div className="card">
          <label>–ò–º—è –ø–∏–ª–æ—Ç–∞:</label><br/>
          <input
            type="text"
            value={pilotName}
            onChange={e => setPilotName(e.target.value)}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫"
            required
          />
        </div>

        <div className="card">
          <label>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å:</label><br/>
          <select value={selectedRole} onChange={e => setSelectedRole(e.target.value)} required>
            <option value="">-- –í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å --</option>
            {roles.map(role => <option key={role} value={role}>{role}</option>)}
          </select>

        </div>

        {ships.length > 0 && (
          <div className="card">
            <label>–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä–∞–±–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–º–µ–µ—Ç–µ –ª–µ—Ç–∞—Ç—å:</label><br/>
            {ships.map(ship => (
              <div key={ship}>
                <input
                  type="checkbox"
                  id={ship}
                  value={ship}
                  checked={selectedShips.includes(ship)}
                  onChange={e => {
                    const checked = e.target.checked
                    setSelectedShips(prev => checked ? [...prev, ship] : prev.filter(s => s !== ship))
                  }}
                />
                <label htmlFor={ship} style={{ marginLeft: '8px' }}>{ship}</label>
              </div>
            ))}
          </div>
        )}

        <div className="card">
          <button type="submit" className="button">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
        </div>
      </form>
    </div>
  )
}
